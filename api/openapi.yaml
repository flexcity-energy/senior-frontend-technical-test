openapi: 3.1.0
info:
  title: Flexcity Test API (In-Memory)
  version: 1.0.0
  description: >
    Minimal API for **assets** and **nominations** used in the candidate assignment.
    Data is stored in memory and reset on server restart.

servers:
  - url: http://localhost:4000

tags:
  - name: Assets
  - name: Nominations

paths:
  /assets:
    get:
      tags: [Assets]
      summary: List all assets
      operationId: listAssets
      responses:
        '200':
          description: List of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
              examples:
                sample:
                  value:
                    - id: "b9b2d1f6-2b3a-4c84-9f0a-1a2b3c4d5e6f"
                      code: "ASSET-A"
                      contact: { email: "a.owner@example.com", phone: "+33 1 23 45 67 01" }
    post:
      tags: [Assets]
      summary: Create an asset
      operationId: createAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreate'
            examples:
              create:
                value:
                  code: "ASSET-X"
                  contact: { email: "x@example.com", phone: "+33 1 22 33 44 55" }
      responses:
        '201':
          description: Created asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Conflict (code must be unique)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /assets/{id}:
    put:
      tags: [Assets]
      summary: Update an asset
      operationId: updateAsset
      parameters:
        - $ref: '#/components/parameters/AssetIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetUpdate'
      responses:
        '200':
          description: Updated asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Conflict (code must be unique)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Assets]
      summary: Delete an asset (and its nominations)
      operationId: deleteAsset
      parameters:
        - $ref: '#/components/parameters/AssetIdPath'
      responses:
        '204':
          description: Deleted
        '404':
          $ref: '#/components/responses/NotFound'

  /nominations:
    get:
      tags: [Nominations]
      summary: List nominations (filterable)
      operationId: listNominations
      parameters:
        - in: query
          name: assetId
          schema: { type: string, format: uuid }
          description: Filter by assetId
        - in: query
          name: from
          schema:
            $ref: '#/components/schemas/DateYMD'
          description: Inclusive lower bound (YYYY-MM-DD)
        - in: query
          name: to
          schema:
            $ref: '#/components/schemas/DateYMD'
          description: Inclusive upper bound (YYYY-MM-DD)
      responses:
        '200':
          description: List of nominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nomination'
              examples:
                sample:
                  value:
                    - id: "2a1e8a38-9f2f-4f75-9e8d-2b3f8c1a0f11"
                      assetId: "b9b2d1f6-2b3a-4c84-9f0a-1a2b3c4d5e6f"
                      date: "2025-08-15"
                      volumeMw: 10
                      price: 42.5
    post:
      tags: [Nominations]
      summary: Create a nomination
      operationId: createNomination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NominationCreate'
            examples:
              create:
                value:
                  assetId: "b9b2d1f6-2b3a-4c84-9f0a-1a2b3c4d5e6f"
                  date: "2025-08-20"
                  volumeMw: -3
                  price: 38
      responses:
        '201':
          description: Created nomination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nomination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Conflict (one nomination per asset per day)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /nominations/{id}:
    put:
      tags: [Nominations]
      summary: Update a nomination
      operationId: updateNomination
      parameters:
        - $ref: '#/components/parameters/NominationIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NominationUpdate'
      responses:
        '200':
          description: Updated nomination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nomination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Conflict (one nomination per asset per day)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Nominations]
      summary: Delete a nomination
      operationId: deleteNomination
      parameters:
        - $ref: '#/components/parameters/NominationIdPath'
      responses:
        '204':
          description: Deleted
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    AssetIdPath:
      in: path
      name: id
      required: true
      schema: { type: string, format: uuid }
      description: Asset identifier (uuid)
    NominationIdPath:
      in: path
      name: id
      required: true
      schema: { type: string, format: uuid }
      description: Nomination identifier (uuid)

  responses:
    BadRequest:
      description: Bad Request (validation errors)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    # --- Primitives / helpers ---
    DateYMD:
      type: string
      description: ISO date (YYYY-MM-DD)
      pattern: '^\d{4}-\d{2}-\d{2}$'
      examples: ["2025-08-15"]

    # --- Assets ---
    Asset:
      type: object
      required: [id, code, contact]
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
          description: Unique asset code
          minLength: 1
        contact:
          $ref: '#/components/schemas/Contact'
    AssetCreate:
      type: object
      required: [code, contact]
      properties:
        code:
          type: string
          minLength: 1
        contact:
          $ref: '#/components/schemas/Contact'
    AssetUpdate:
      allOf:
        - $ref: '#/components/schemas/AssetCreate'

    Contact:
      type: object
      required: [email, phone]
      properties:
        email:
          type: string
          format: email
        phone:
          type: string
          description: E.164 or national format

    # --- Nominations ---
    Nomination:
      type: object
      required: [id, assetId, date, volumeMw, price]
      properties:
        id:
          type: string
          format: uuid
        assetId:
          type: string
          format: uuid
          description: Must reference an existing asset
        date:
          $ref: '#/components/schemas/DateYMD'
        volumeMw:
          type: number
          description: Capacity in MW (may be negative)
        price:
          type: number
          description: Tariff for this capacity on that day
    NominationCreate:
      type: object
      required: [assetId, date, volumeMw, price]
      properties:
        assetId:
          type: string
          format: uuid
        date:
          $ref: '#/components/schemas/DateYMD'
        volumeMw:
          type: number
        price:
          type: number
    NominationUpdate:
      allOf:
        - $ref: '#/components/schemas/NominationCreate'

    # --- Errors ---
    Error:
      type: object
      properties:
        error:
          type: string
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
